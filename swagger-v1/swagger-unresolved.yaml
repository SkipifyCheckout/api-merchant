openapi: 3.0.0
info:
  title: Merchant API
  description: |
    Merchant API used to manage merchant configurations (configs, users, domains, credentials).
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.10
servers:
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/Skipify/merchant-api/1.0.10
tags:
- name: Merchant
  description: |
    Core merchant related API service methods - including CRUD operations and SDK retrieval.
- name: Merchant Callback
  description: |
    Merchant callback related API service methods.
- name: Merchant Credentials
  description: |
    Management of a merchant's credentials for such things as payment gateways and API keys. Currently the API key is created when a Merchant is created. It cannot be created, updated, or deleted using these APIs.
- name: Merchant Configurations
  description: |
    Management of a merchant's overall configurations including: feature toggles, domain registration integration credentials, etc.
- name: Merchant Domain
  description: |
    Merchant domain related API service methods.
- name: Merchant User
  description: |
    Merchant users management related API service methods.

paths:
  /merchants:
    get:
      tags:
      - Merchant
      summary: Retrieves the paginated list of merchants
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves the paginated list of merchants. A merchant will only see their child merchants (assuming they have any child merchants).

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint. The list of merchants returned is based on the scope of the merchant the JWT/MAC is created under. MerchantAdmin and Developer users cannot access this API.
        
        merchantId query parameter will only be observed when this API is called by a SuperAdmin
      parameters:
      - $ref: '#/components/parameters/MerchantIdQueryParameter'
      - $ref: '#/components/parameters/SearchPhraseQueryParameter'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageSize'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageNumber'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantSummariesPagedResponse'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    post:
      tags:
      - Merchant
      summary: Creates a new merchant
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Creates a new merchant. On creation of a new merchant there is the opporunity to seed the merchant with configuration, domain, and callback details. There is also the opportunity to provision users with access to the merchant.
        
        It is not required to provision resources like merchant domains, configurations, and callbacks under the context of the merchant during initial creations. There are individual APIs that enable one to manage the aforementioned resources.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint. MerchantAdmin and Developer users cannot access this API.
        
        MerchantCredentials cannot contain multiple credentials with the same CredentialType.
        
        MerchantConfigs cannot contain multiple configs with the same ConfigType.
        
        The TaxType config can only be set to Taxable if the request body also has a ShippingAndTax callback set.
        
        The FulfillmentType config can only be set to Shipping if the request body also has a ShippingAndTax callback set.
        
        ConfigTypes CheckoutButton, ExpeditedGuestCheckout, and PayByLink can only be set by SUPERADMIN users.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantComplexRequestBody'
      responses:
        "201":
          description: |
            [201] The request succeeded and a new resource was created.
            The identity for the resource created is included in the response **Location** header.
          headers:
            Location:
              $ref: '#/components/headers/MerchantLocationHeader'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}:
    get:
      tags:
      - Merchant
      summary: Retrieves a merchant's details
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*

        Gets the details for the specified merchant. Details are only returned if the caller has the authorization to fetch the merchant's details.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantDetails'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    put:
      tags:
      - Merchant
      summary: Updates a merchant
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*

        Updates the base details for the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint. Developer users cannot access this API.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantBase'
      responses:
        "204":
          description: |
            Successfully processed the request
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/industry:
    get:
      tags:
      - Merchant
      summary: Retrieves industry by merchant id
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Helper service that retrieves the merchant's industry.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantIndustryResponse'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/health:
    get:
      tags:
      - Merchant
      summary: Retrieves health status of a merchant
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Checks that the referrer used to hit this endpoint is a valid
        registered domain for this merchant, that the merchant has payment
        processor/gateway configurations setup, and that the merchant has
        credentials configured for that payment processor.
        It does NOT verify that the credentials are correct.
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      responses:
        "200":
          description: |
            All health checks passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantHealthSuccess'
        "500":
          description: |
            One or more health checks failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantHealthFailure'
  /merchants/{merchantId}/sdk:
    get:
      tags:
      - Merchant
      summary: Retrieves the Skipify SDK for a merchant
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves the Skipify SDK for the merchant. A merchant SDK is only accessible if the domain they are requesting the SDK from is registered with the merchant.

        This SDK is used by merchants to simplify their integration of Skipify into their checkout web experience.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      responses:
        "200":
          description: |
            Successful retrieval of the Skipify SDK for the specified merchant.
          content:
            application/javascript:
              schema:
                type: string
                description: |
                  The SDK JavaScript that makes integration with Skipify simple!
                format: binary
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/callbacks:
    get:
      tags:
      - Merchant Callback
      summary: Retrieves list of registered callbacks for a merchant
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves the list of callbacks associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageSize'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageNumber'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCallbackPagedResponse'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    post:
      tags:
      - Merchant Callback
      summary: Creates a new merchant callback
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Configures a callback of the specified type associated with the merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCallbackRequestBody'
      responses:
        "201":
          description: |
            [201] The request succeeded and a new resource was created. The identity for the resource created is returned in the **Location** header.
          headers:
            Location:
              $ref: '#/components/headers/MerchantCallbackLocationHeader'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/callbacks/{callbackId}:
    get:
      tags:
      - Merchant Callback
      summary: Retrieves a merchant callback
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves a registered callback associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/CallbackIdPathParameter'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCallback'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    put:
      tags:
      - Merchant Callback
      summary: Updates a merchant callback
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Updates a previously a registered callback associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/CallbackIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCallbackRequestBody'
      responses:
        "204":
          description: |
            Successfully processed the request
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    delete:
      tags:
      - Merchant Callback
      summary: Deletes a merchant callback
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Delete the specified callback associated with this merchant.

        A ShippingAndTax callback can only be deleted if the merchant's TaxType config is set to NonTaxable and the merchant's FulfillmentType config is set to Service.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/CallbackIdPathParameter'
      responses:
        "204":
          description: |
            [204] Successfully processed the request. No content to return (typically related to the delete of a resource).
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/domains:
    get:
      tags:
      - Merchant Domain
      summary: Retrieves list of valid domains for a merchant
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves the list of domains associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageSize'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageNumber'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantDomainPagedResponse'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    post:
      tags:
      - Merchant Domain
      summary: Creates a new merchant domain
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Configures a domain for the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantDomainRequestBody'
      responses:
        "201":
          description: |
            [201] The request succeeded and a new resource was created. The identity for the resource created is included in the **Location** response header.
          headers:
            Location:
              $ref: '#/components/headers/MerchantDomainLocationHeader'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/domains/{domainId}:
    get:
      tags:
      - Merchant Domain
      summary: Retrieves a merchant or partner merchant's domain information
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves a registered domain associated with this merchant or it's partner merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/DomainIdPathParameter'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantDomain'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    put:
      tags:
      - Merchant Domain
      summary: Updates a merchant domain
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Updates a previously a registered domain associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/DomainIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantDomainRequestBody'
      responses:
        "204":
          description: |
            Successfully processed the request
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    delete:
      tags:
      - Merchant Domain
      summary: Removes a merchant domain
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Delete the specified domain associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/DomainIdPathParameter'
      responses:
        "204":
          description: "[204] Successfully processed the request. No content to return\
            \ (typically related to the delete of a resource).\n"
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/users:
    get:
      tags:
      - Merchant User
      summary: Retrieves list of merchant users
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Gets the users associated with the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageSize'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageNumber'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantUserSummariesPagedResponse'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    post:
      tags:
      - Merchant User
      summary: Creates a new merchant user
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Creates a new merchant user associated with the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantUserRequestBody'
      responses:
        "201":
          description: |
            [201] The request succeeded and a new resource was created. The identity for the resource created is included in the **Location** response header.
          headers:
            Location:
              $ref: '#/components/headers/MerchantUserLocationHeader'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/users/{userId}:
    get:
      tags:
      - Merchant User
      summary: Retrieves a merchant user
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves a merchant user associated with the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/MerchantUserIdPathParameter'
      responses:
        "200":
          description: Successfully retrieved the requested user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantUser'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    put:
      tags:
      - Merchant User
      summary: Updates a merchant User
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Updates a merchant user associated with the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/MerchantUserIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - Role
              properties:
                Role:
                  allOf:
                    - $ref: '#/components/schemas/Role'
              additionalProperties: false
              description: |
                Request body paylod to update a merchant user.
      responses:
        "204":
          description: |
            Successfully processed the request
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    delete:
      tags:
      - Merchant User
      summary: Removes a merchant User
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Deletes a merchant user associated with the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/MerchantUserIdPathParameter'
      responses:
        "204":
          description: |
            [204] Successfully processed the request. No content to return (typically related to the delete of a resource).
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  
  /merchants/{merchantId}/credentials:
    get:
      tags:
      - Merchant Credentials
      summary: Retrieves List of merchants credentials
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves the list of merchant credentials associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageSize'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageNumber'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredentialPagedResponse'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    post:
      tags:
      - Merchant Credentials
      summary: Creates merchant credential
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Creates a new merchant credential associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
        
        A merchant cannot contain two credentials with the same CredentialType.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      requestBody:
        description: Create merchant credential for one of the Skipify supported credential
          types.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequestBody'
      responses:
        "201":
          description: |
            [201] The request succeeded and a new resource was created. The identity for the resource created is included in the **Location** header.
          headers:
            Location:
              $ref: '#/components/headers/MerchantCredentialLocationHeader'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/credentials/{credentialId}:
    get:
      tags:
      - Merchant Credentials
      summary: Retrieves a merchant credential information
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves a new merchant credential with the specified id.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/CredentialIdPathParameter'
      responses:
        "200":
          description: |
            Successfully retrieved the specified merchant's credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    put:
      tags:
      - Merchant Credentials
      summary: Updates a merchant credential
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Updates an existing merchant credential associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
        
        The CredentialType for a merchant credential cannot be changed when updating.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/CredentialIdPathParameter'
      requestBody:
        description: Update merchant credential input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequestBody'
      responses:
        "204":
          description: |
            Successfully processed the request
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    delete:
      tags:
      - Merchant Credentials
      summary: Removes a merchant credential
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Deletes a merchant credential associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
        
        A payment gateway credential cannot be deleted if the credential being deleted the Merchant's PaymentProcessor config is set to the same CredentialType.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/CredentialIdPathParameter'
      responses:
        "204":
          description: |
            [204] Successfully processed the request. No content to return (typically related to the delete of a resource).
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/configs:
    get:
      tags:
      - Merchant Configurations
      summary: Retrieves list of valid configuration for a merchant
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves the list of configurations associated with this merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageSize'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageNumber'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConfigPagedResponse'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    post:
      tags:
      - Merchant Configurations
      summary: Creates a new merchant configuration
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Creates a new merchant configuration for the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
        
        A merchant cannot contain two configs with the same ConfigType.
        
        The TaxType config can only be set to Taxable if the Merchant has a ShippingAndTax callback setup.
        
        The FulfillmentType config can only be set to Shipping if the Merchant has a ShippingAndTax callback setup.
        
        ConfigTypes CheckoutButton, ExpeditedGuestCheckout, and PayByLink can only be created by SUPERADMIN users.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantConfigRequestBody'
      responses:
        "201":
          description: |
            [201] The request succeeded and a new resource was created. The identity for the resource created is included in the response **Location** header.
          headers:
            Location:
              $ref: '#/components/headers/MerchantConfigurationLocationHeader'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/configs/{configId}:
    get:
      tags:
      - Merchant Configurations
      summary: Retrieves a merchant configuration information
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Retrieves a merchant configuration for the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/ConfigIdPathParameter'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantConfig'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    put:
      tags:
      - Merchant Configurations
      summary: Updates a merchant configuraton
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Updates an existing merchant configuration for the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
        
        The TaxType config can only be set to Taxable if the Merchant has a ShippingAndTax callback setup.
        
        The FulfillmentType config can only be set to Shipping if the Merchant has a ShippingAndTax callback setup.
        
        ConfigTypes CheckoutButton, ExpeditedGuestCheckout, and PayByLink can only be updated by SUPERADMIN users.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/ConfigIdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantConfigRequestBody'
      responses:
        "204":
          description: |
            Successfully processed the request
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
    delete:
      tags:
      - Merchant Configurations
      summary: Removes a merchant configuration
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Deletes a merchant configuration for the specified merchant.

        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
        
        ConfigTypes CheckoutButton, ExpeditedGuestCheckout, and PayByLink cannot be deleted.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      - $ref: '#/components/parameters/ConfigIdPathParameter'
      responses:
        "204":
          description: |
            [204] Successfully processed the request. No content to return (typically related to the delete of a resource).
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
  /merchants/{merchantId}/configs/logos:
    post:
      tags:
      - Upload
      summary: Uploads merchant image
      description: |
        *Skipify offers Staging & Production environments for the different phases of integration. See the [Environments](https://docs.skipify.com/docs/environments) page for more details.*
        
        Uploads an image for the merchant.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      parameters:
      - $ref: '#/components/parameters/MerchantIdPathParameter'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ImageUploadResult'
        default:
          description: |
            Standard error response codes are returned by this service method.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ExceptionResponse'
components:
  schemas:
    CallbackType:
      type: string
      description: |
        Enum of callback types supported by the Skipify platform.
      enum:
      - ShippingAndTax
    ImageUploadResult:
      type: object
      properties:
        fileName:
          type: string
          nullable: true
          readOnly: true
          example: someFileName
      additionalProperties: false
    InheritableResourceBase:
      required:
      - isInherited
      type: object
      properties:
        isInherited:
          type: boolean
          description: |
            Set to true if the callback url is inherited from a partner merchant; false if explicitly managed under the context of this merchant.
          example: false
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ResourceBase'
    MerchantSummariesPagedResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MerchantSummary'
      additionalProperties: false
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/PaginatedResponseBase'
    MerchantDetails:
      type: object
      properties:
        merchantCredentials:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantCredential'
        merchantDomains:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantDomain'
        merchantConfigs:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantConfig'
        merchantCallbacks:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantCallback'
        merchantUsers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantUser'
      additionalProperties: false
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/MerchantBase'
    MerchantBase:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The merchant's name
          example: MK Fine Woodworking
        partnerMerchantId:
          type: string
          description: |
            The merchant this merchant rolls up to. This is common in an ISV setting where a merchant is onboarded into Skipify under the context of an ISV. Child merchants have the ability to inherit configuration details from the partner merchant, which can significantly simplify the management of merchant configurations across a large number of child merchants.
            
            Only SuperAdmin users can update the partnerMerchantId.
          format: uuid
          nullable: true
          example: 87285c60-15b3-4d9c-8c27-92ba7873b2ad
        industry:
          $ref: '#/components/schemas/MerchantIndustry'
      additionalProperties: false
    MerchantCallbackBase:
      required:
      - callbackType
      - url
      type: object
      properties:
        url:
          type: string
          description: |
            The callback URL that Skipify will make a call to.
          format: uri
          example: https://www.mkfinewoodworking.com
        callbackType:
          $ref: '#/components/schemas/CallbackType'
    MerchantCallback:
      type: object
      description: "Details related to a type of merchant callback."
      allOf:
      - $ref: '#/components/schemas/MerchantCallbackBase'
      - $ref: '#/components/schemas/InheritableResourceBase'
    MerchantCallbackPagedResponse:
      type: object
      properties:
        data:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MerchantCallback'
      additionalProperties: false
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/PaginatedResponseBase'
    MerchantCallbackRequestBody:
      type: object
      required:
      - callbackType
      - url
      additionalProperties: false
      description: |
        Request body payload to create or update a merchant callback.
      allOf:
      - $ref: '#/components/schemas/MerchantCallbackBase'
    MerchantDomainBase:
      type: object
      properties:
        domain:
          type: string
          description: |
            The domain that Skipify will register with the merchant.
          example: https://www.mkfinewoodworking.com
      additionalProperties: false
    MerchantDomain:
      required:
      - domain
      type: object
      description: "Details related to a merchant's domain."
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/MerchantDomainBase'
      - $ref: '#/components/schemas/InheritableResourceBase'
    MerchantDomainRequestBody:
      required:
      - domain
      type: object
      additionalProperties: false
      description: |
        Request body payload to create or update a merchant domain.
      allOf:
      - $ref: '#/components/schemas/MerchantDomainBase'
    MerchantDomainPagedResponse:
      type: object
      properties:
        data:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MerchantDomain'
      additionalProperties: false
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/PaginatedResponseBase'
    MerchantHealthFailure:
      type: object
      properties:
        validDomain:
          type: boolean
          nullable: false
          example: false
        validPaymentProcessorConfigured:
          type: boolean
          nullable: false
          example: false
        paymentProcessorCredentialsVerified:
          type: boolean
          nullable: false
          example: false
        errors:
          type: array
          nullable: true
          items:
            type: string
          example: ["No valid payment processor config for merchant: 3f326510-8fb0-4565-9de1-a090aaa49ac2", "Invalid domain: abc.com for merchant: 3f326510-8fb0-4565-9de1-a090aaa49ac2"]
    MerchantHealthSuccess:
      type: object
      properties:
        validDomain:
          type: boolean
          nullable: false
          example: true
        validPaymentProcessorConfigured:
          type: boolean
          nullable: false
          example: true
        paymentProcessorCredentialsVerified:
          type: boolean
          nullable: false
          example: true
    MerchantIndustry:
      type: string
      enum:
      - GoCart_Internal
      - Department_Stores
      - Electronics
      - Fashion_Apparel
      - Fitness_Equipment
      - Furniture
      - Hardware
      - Home_Goods
      - Jewelry
      - Lawn_Garden
      - Sporting_Goods
      - Healthcare
      - Personal_Services
      - Professional_Services
      - Transportation
      - Hotel_Lodging
      - Restaurant
      - Food_Services
      - Grocery_CPG
      - B2B_Wholesale
      - Bill_Pay
      description: |
            The industry of the merchant. If the merchant is a child merchant, the industry is inherited from the merchant this merchant rolls up to. This field is required when creating an ISV or standalone merchant.
    MerchantComplexRequestBody:
      type: object
      properties:
        merchantCredentials:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentGatewayCredentials'
        merchantDomains:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantDomainRequestBody'
        merchantConfigs:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantConfigRequestBody'
        merchantCallbacks:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantCallbackRequestBody'
        merchantUsers:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MerchantUserRequestBody'
      allOf:
      - $ref: '#/components/schemas/MerchantBase'
    MerchantSummary:
      type: object
      additionalProperties: false
      description: |
        Summary of merchant information (no lower level details such as merchant configurations, domains, or callbacks included). For this type of information, either use the lower level merchant APIs and/or use the GET merchants/{merchantId} service method.
      allOf:
      - $ref: '#/components/schemas/MerchantBase'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ResourceBase'
    MerchantConfigPagedResponse:
      type: object
      properties:
        data:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MerchantConfig'
      additionalProperties: false
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/PaginatedResponseBase'
    MerchantConfig:
      type: object
      additionalProperties: false
      description: |
        Represents a single merchant configuration.
      allOf:
      - $ref: '#/components/schemas/InheritableResourceBase'
      - $ref: '#/components/schemas/MerchantConfigBase'
    MerchantConfigRequestBody:
      type: object
      additionalProperties: false
      description: |
        Request body payload for creating and updating a merchant config.
      allOf:
      - $ref: '#/components/schemas/MerchantConfigBase'
    MerchantConfigBase:
      type: object
      additionalProperties: false
      description: |
        Base representation of a a single merchant configuration.
      oneOf:
      - $ref: '#/components/schemas/MerchantBrandingConfig'
      - $ref: '#/components/schemas/MerchantCoBrandingConfig'
      - $ref: '#/components/schemas/MerchantPaymentProcessorConfig'
      - $ref: '#/components/schemas/MerchantFulfillmentTypeConfig'
      - $ref: '#/components/schemas/MerchantSettlementTypeConfig'
      - $ref: '#/components/schemas/MerchantTaxTypeConfig'
      - $ref: '#/components/schemas/MerchantTippingConfig'
      - $ref: '#/components/schemas/MerchantTippingPercentageConfig'
      - $ref: '#/components/schemas/MerchantGoCartCheckoutButtonConfig'
      - $ref: '#/components/schemas/MerchantExpeditedGuestCheckoutConfig'
      - $ref: '#/components/schemas/MerchantPayByLinkConfig'
      - $ref: '#/components/schemas/MerchantDemoPurchaseDetails'
    MerchantTippingConfig:
      required:
      - configType
      - enabled
      type: object
      properties:
        configType:
          type: string
          example: Tipping
          enum:
          - Tipping
        enabled:
          type: boolean
          example: true
          default: false
      description: |
        The tipping model the merchant operates under.

        |Type    |Description|
        |--------|-----------|
        |true|The merchant offers a tip option on sales.|
        |false|The merchant doesn't offer a tipping option on sales.|
    MerchantTippingPercentageConfig:
      required:
      - configType
      - percentages
      type: object
      properties:
        configType:
          type: string
          example: TippingPercentages
          enum:
          - TippingPercentages
        percentages:
          type: array
          items:
            type: integer
            minimum: 1
            maximum: 99
          minItems: 3
          maxItems: 3
          uniqueItems: true
      description: |
        A merchant has the option to configure 3 custom tipping percentages to calculate and display alongside the total for a sale.
        Values passed to the API are a list of 3 integers corresponding to a whole percent value i.e: 10 = 10%
    MerchantBrandingConfig:
      required:
      - configType
      type: object
      properties:
        configType:
          type: string
          example: MerchantBrandingConfig
          enum:
          - MerchantBrandingConfig
        displayName:
          type: string
          minLength: 1
          maxLength: 64
          example: MK Fine Woodworking
        logoSrc:
          type: string
          minLength: 1
          maxLength: 64
          example: logo_e4ee0316-5e2f-429d-8474-8a4f4dc78fa8
        color:
          type: string
          minLength: 7
          maxLength: 7
          format: hex color code
          example: '#5E6BA3'
        useLogoForPurchaseDetails:
          type: boolean
          example: true
          default: false
      description: |
        The branding configuation for the merchant. This is a JSON configuration to control the 'displayName', 'logoSrc' and 'color'.
    MerchantCoBrandingConfig:
      required:
      - configType
      type: object
      properties:
        configType:
          type: string
          example: ModalCoBranding
          enum:
          - ModalCoBranding
        logoTheme:
          type: string
          example: LIGHT
          enum:
          - LIGHT
          - DARK
        buttonTextTheme:
          type: string
          example: DARK
          enum:
          - LIGHT
          - DARK
        logo:
          type: string
          minLength: 1
          maxLength: 64
          example: logo_e4ee0316-5e2f-429d-8474-8a4f4dc78fa8
        primaryColor:
          type: string
          minLength: 7
          maxLength: 7
          format: hex color code
          example: '#5E6BA3'
        secondaryColor:
          type: string
          minLength: 7
          maxLength: 7
          format: hex color code
          example: '#5E6BA3'
      description: |
        The Skipify modal co-branding configuation for the merchant. This is a JSON configuration to control the 'logoTheme', 'buttonTextTheme', 'logo', 'primaryColor' and 'secondaryColor'.
    MerchantDemoPurchaseDetails:
      required:
      - configType
      properties:
        configType:
          type: string
          example: DemoPurchaseDetails
          enum:
          - DemoPurchaseDetails
        label1:
          type: string
          maxLength: 30
          example: My Merchant
        description1:
          type: string
          maxLength: 30
          example: 3 items
        label2:
          type: string
          maxLength: 30
          example: Pickup
        description2:
          type: string
          maxLength: 30
          example: 25 minutes
        label3:
          type: string
          maxLength: 30
          example: Store Address
        description3:
          type: string
          maxLength: 105
          example: 123 main st. Denver, CO 12345
      description: |
        A merchant has the option to include addition details related to a purchase to their orders. Some merchants use this capability to include details like the delivery address, delivery time, or restaurant location to the order. MerchantDemoPurchaseDetails can be configured as a means to provide a preview of what the PurchaseDetails will look like when displayed to a customer viewing an order.
    MerchantPaymentProcessorConfig:
      required:
      - configType
      - paymentProcessor
      type: object
      properties:
        configType:
          type: string
          example: PaymentProcessor
          enum:
          - PaymentProcessor
        paymentProcessor:
          type: string
          example: Express
          enum:
          - Express
          - RAFT
          - VAP
          - WPG
      description: |
        The primary payment processor for the merchant.
    MerchantFulfillmentTypeConfig:
      required:
      - configType
      - fulfillmentType
      type: object
      properties:
        configType:
          type: string
          example: FulfillmentType
          enum:
          - FulfillmentType
        fulfillmentType:
          type: string
          example: Service
          enum:
          - Shipping
          - Service
      description: |
        The type of fulfillment the merchant operates under.

        |Type    |Description|
        |--------|-----------|
        |Shipping|The merchant ships/delivers their product/offering.|
        |Service |The merchant is selling a service of some form.    |
    MerchantSettlementTypeConfig:
      required:
      - configType
      - settlementType
      type: object
      properties:
        configType:
          type: string
          example: SettlementType
          enum:
          - SettlementType
        settlementType:
          type: string
          example: Sale
          enum:
          - Sale
          - AuthCapture
      description: |
        The type of settlement the merchant operates under.

        |Type    |Description|
        |--------|-----------|
        |Sale|The merchant completes the transfer of funds at time of sale.|
        |AuthCapture|The merchant will authorize the funds and capture them at a future time.|
    MerchantTaxTypeConfig:
      required:
      - configType
      - taxType
      type: object
      properties:
        configType:
          type: string
          example: TaxType
          enum:
          - TaxType
        taxType:
          type: string
          example: Taxable
          enum:
          - Taxable
          - NonTaxable
      description: |
        The tax model the merchant operates under.

        |Type    |Description|
        |--------|-----------|
        |Taxable|The merchant charges tax.|
        |NonTaxable|The merchant doesn't charge tax.|
    MerchantGoCartCheckoutButtonConfig:
      required:
      - configType
      - enabled
      type: object
      properties:
        configType:
          type: string
          example: CheckoutButton
          enum:
          - CheckoutButton
        enabled:
          type: boolean
          example: true
          default: false
      description: |
        Whether the Skipify checkout button is enabled for the merchant or not.

        |Type    |Description|
        |--------|-----------|
        |true|Skipify checkout button enabled.|
        |false|Skipify checkout button not enabled.|
    MerchantExpeditedGuestCheckoutConfig:
      required:
      - configType
      - enabled
      type: object
      properties:
        configType:
          type: string
          example: ExpeditedGuestCheckout
          enum:
          - ExpeditedGuestCheckout
        enabled:
          type: boolean
          example: true
          default: false
      description: |
        Whether the Skipify expedited guest checkout is enabled for the merchant or not.

        |Type    |Description|
        |--------|-----------|
        |true|Skipify expedited guest checkout enabled.|
        |false|Skipify expedited guest checkout not enabled.|
    MerchantPayByLinkConfig:
      required:
      - configType
      - enabled
      type: object
      properties:
        configType:
          type: string
          example: PayByLink
          enum:
          - PayByLink
        enabled:
          type: boolean
          example: true
          default: false
      description: |
        Whether the Skipify Pay By Link is enabled for the merchant or not.

        |Type    |Description|
        |--------|-----------|
        |true|Skipify Pay By Link checkout enabled.|
        |false|Skipify Pay By Link not enabled.|
    MerchantUserSummariesPagedResponse:
      type: object
      properties:
        data:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MerchantUser'
      additionalProperties: false
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/PaginatedResponseBase'
    MerchantUser:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/MerchantUserBase'
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ResourceBase'
    MerchantUserBase:
      required:
      - email
      - role
      type: object
      properties:
        email:
          type: string
          description: |
            The user's email address. This email address must be unique within the Skipify platform.
          format: email
          example: kenney.powers@gmail.com
        role:
          $ref: '#/components/schemas/Role'
      additionalProperties: false
    MerchantUserRequestBody:
      type: object
      additionalProperties: false
      description: |
        Request body paylod to create a merchant user.
      allOf:
      - $ref: '#/components/schemas/MerchantUserBase'
    
    MerchantIndustryResponse:
      type: object
      properties:
        industry:
          $ref: '#/components/schemas/MerchantIndustry'
      additionalProperties: false
    MerchantCredentialPagedResponse:
      type: object
      properties:
        data:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MerchantCredential'
      additionalProperties: false
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/PaginatedResponseBase'
    MerchantCredential:
      type: object
      description: |
        Merchant credential represents the credentials for one of the Skipify supported credential types (e.g., payment gateway credentials, api key, etc.)
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/MerchantCredentialBase'
    MerchantCredentialRequestBody:
      type: object
      description: |
        Object used to create and update a merchant credential of one of the supported types (e.g., API Key, Payment Gateway Credentials, etc.).
      allOf:
      - $ref: '#/components/schemas/MerchantCredentialBase'
    MerchantCredentialBase:
      type: object
      description: |
        Container for one of the supported merchant credential types (e.g., API Key, Payment Gateway Credentials, etc.).
      oneOf:
      - $ref: '#/components/schemas/MerchantApiKey'
      - $ref: '#/components/schemas/PaymentGatewayCredentials'
    MerchantApiKey:
      required:
      - apiKey
      - credentialType
      type: object
      properties:
        credentialType:
          type: string
          example: API_Key
          enum:
          - API_Key
        apiKey:
          type: string
          example: acf66a54-04f5-44e2-b43a-2a2d1026be0d
      description: |
        API key for Skipify. This key is used to create MAC hashes, which are necessary for all Skipify B2B integrations.
        
        Note: The credentialType is required and must be set to 'API_Key'
    PaymentGatewayCredentials:
      type: object
      description: |
        General schema container for payment gateway credentials.
      oneOf:
      - $ref: '#/components/schemas/PaymentGatewayExpressCredentials'
      - $ref: '#/components/schemas/PaymentGatewayRaftCredentials'
      - $ref: '#/components/schemas/PaymentGatewayVapCredentials'
      - $ref: '#/components/schemas/PaymentGatewayWpgCredentials'
    PaymentGatewayExpressCredentials:
      required:
      - acceptorId
      - accountId
      - accountToken
      - credentialType
      type: object
      properties:
        credentialType:
          type: string
          example: Express
          enum:
          - Express
        acceptorId:
          type: string
          example: "123456789"
        accountId:
          type: string
          example: "1112222"
        accountToken:
          type: string
          example: AAAC11165E88AEEE44DDD0A484FFF707C0D7EEE7053EBF8B8A3ABDBBB1DF456C3231111
        terminalId:
          type: string
          example: "0001"
      additionalProperties: false
      description: |
        Credentials for connecting to the Express payment gateway.
        
        Note: The credentialType is required and must be set to 'Express'
    PaymentGatewayRaftCredentials:
      required:
      - credentialType
      - stpTerminalId
      - stpBankId
      - merchantId
      type: object
      properties:
        credentialType:
          type: string
          example: RAFT
          enum:
          - RAFT
        stpTerminalId:
          type: string
          example: "003"
          description: "Contains the 3-digit terminal id assigned by Worldpay during boarding."
        stpBankId:
          type: string
          example: "1234"
          description: "Contains the 4-digit bank id assigned by Worldpay during boarding."
        merchantId:
          type: string
          example: "1234567891234"
        terminalId:
          type: string
          example: "0001"
      additionalProperties: false
      description: |
        Credentials for connecting to the RAFT payment gateway.
        
        Note: The credentialType is required and must be set to 'RAFT'
    PaymentGatewayVapCredentials:
      required:
      - credentialType
      - merchantId
      - password
      - username
      type: object
      properties:
        credentialType:
          type: string
          example: VAP
          enum:
          - VAP
        username:
          type: string
          example: kennypowers
        password:
          type: string
          example: SuperStrongP@ssword!!
        merchantId:
          type: string
          example: "123456789"
      additionalProperties: false
      description: |
        Credentials for connecting to the VAP payment gateway.  
        
        Note: The credentialType is required and must be set to 'VAP'
    PaymentGatewayWpgCredentials:
      required:
      - credentialType
      - merchantCode
      - password
      - username
      type: object
      properties:
        credentialType:
          type: string
          example: WPG
          enum:
          - WPG
        username:
          type: string
          example: kennypowers
        password:
          type: string
          example: SuperStrongP@ssword!!
        merchantCode:
          type: string
          example: "123456789"
      additionalProperties: false
      description: |
        Credentials for connecting to the WPG payment gateway. 
        
        Note: The credentialType is required and must be set to 'WPG'
    Role:
      type: string
      description: |
        Roles that determine a user's permissions in the context of a merchant.
      enum:
      - DEVELOPER
      - MERCHANTADMIN
      - SUPERADMIN
      - MERCHANTPARTNER

  parameters:
    MerchantIdQueryParameter:
      name: merchantId
      in: query
      description: |
        The unique identifier for the merchant in the context of Skipify.
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: uuid
        example: 3f326510-8fb0-4565-9de1-a090aaa49ac2
    SearchPhraseQueryParameter:
      name: searchPhrase
      in: query
      description: |
        String to match Merchant Name or Id. Can be entire name/ Id or a partial match.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: Fine+Woodworking
    MerchantIdPathParameter:
      name: merchantId
      in: path
      description: |
        The unique identifier for the merchant in the context of Skipify.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
        example: 3f326510-8fb0-4565-9de1-a090aaa49ac2
    CallbackIdPathParameter:
      name: callbackId
      in: path
      description: |
        The unique identifier for the merchant callback in the context of a merchant.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
        example: f62e04d0-fe94-4bc9-a23a-54cd8fc4004c
    DomainIdPathParameter:
      name: domainId
      in: path
      description: |
        The unique identifier for the merchant domain in the context of a merchant.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
        example: f62e04d0-fe94-4bc9-a23a-54cd8fc4004c
    CredentialIdPathParameter:
      name: credentialId
      in: path
      description: |
        The unique identifier for the merchant credential.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
        example: abae04d0-fe94-4bc9-a23a-54cd8fc4004c
    ConfigIdPathParameter:
      name: configId
      in: path
      description: |
        The unique identifier for the merchant config.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
        example: abae04d0-fe94-4bc9-a23a-54cd8fc4004c
    MerchantUserIdPathParameter:
      name: userId
      in: path
      description: |
        The unique identifier for the merchant user.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
        example: abae04d0-fe94-4bc9-a23a-54cd8fc4004c
  headers:
    MerchantLocationHeader:
      schema:
        type: string
        format: url
        description: |
          The url for the GET location of the resource just created
        example: https://api.skipify.com/merchants/d373d03c-56b7-449c-aa21-b41555bf075e
    MerchantCallbackLocationHeader:
      schema:
        type: string
        format: url
        description: |
          The url for the GET location of the resource just created
        example: https://api.skipify.com/merchants/d373d03c-56b7-449c-aa21-b41555bf075e/callbacks/3a85f12e-63e0-402b-a3fb-113889f38444
    MerchantCredentialLocationHeader:
      schema:
        type: string
        format: url
        description: |
          The url for the GET location of the resource just created
        example: https://api.skipify.com/merchants/d373d03c-56b7-449c-aa21-b41555bf075e/credentials/3a85f12e-63e0-402b-a3fb-113889f38444
    MerchantConfigurationLocationHeader:
      schema:
        type: string
        format: url
        description: |
          The url for the GET location of the resource just created
        example: https://api.skipify.com/merchants/d373d03c-56b7-449c-aa21-b41555bf075e/configs/3a85f12e-63e0-402b-a3fb-113889f38444
    MerchantDomainLocationHeader:
      schema:
        type: string
        format: url
        description: |
          The url for the GET location of the resource just created
        example: https://api.skipify.com/merchants/d373d03c-56b7-449c-aa21-b41555bf075e/domains/3a85f12e-63e0-402b-a3fb-113889f38444
    MerchantUserLocationHeader:
      schema:
        type: string
        format: url
        description: |
          The url for the GET location of the resource just created
        example: https://api.skipify.com/merchants/d373d03c-56b7-449c-aa21-b41555bf075e/users/3a85f12e-63e0-402b-a3fb-113889f38444